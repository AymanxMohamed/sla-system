// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlaSystem.Infrastructure.Persistence;

#nullable disable

namespace SlaSystem.Infrastructure.SlaSystem.InfrastructurePersistenceMigrationsInitialMIgration
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("SlaSystem.Domain.Entities.Queue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("QueueName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Queues");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SlaExpiredOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasComputedColumnSql("DATEADD(HOUR, [Sla].[DurationInHours], [CreatedAt])");

                    b.Property<Guid>("SlaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SlaStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SlaId")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.Sla", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("DurationInHours")
                        .HasColumnType("REAL");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Severity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Slas");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QueueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QueueId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.Request", b =>
                {
                    b.HasOne("SlaSystem.Domain.Entities.User", "Client")
                        .WithMany("MyCreatedRequests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SlaSystem.Domain.Entities.User", "Owner")
                        .WithMany("OwnedRequests")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SlaSystem.Domain.Entities.Sla", "Sla")
                        .WithOne()
                        .HasForeignKey("SlaSystem.Domain.Entities.Request", "SlaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Owner");

                    b.Navigation("Sla");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.User", b =>
                {
                    b.HasOne("SlaSystem.Domain.Entities.Queue", "Queue")
                        .WithMany("Users")
                        .HasForeignKey("QueueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Queue");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.Queue", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SlaSystem.Domain.Entities.User", b =>
                {
                    b.Navigation("MyCreatedRequests");

                    b.Navigation("OwnedRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
